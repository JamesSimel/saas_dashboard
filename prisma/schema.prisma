datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                    String    @id @default(cuid())
  name                  String?
  email                 String?   @unique
  emailVerified         DateTime?
  image                 String?
  hashedPassword        String?
  passwordResetToken    String?
  passwordResetExpires  DateTime?
  verificationToken     String?
  accounts              Account[]
  sessions             Session[]
  analyticsEvents AnalyticsEvent[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model AnalyticsEvent {
  id          String    @id @default(cuid())
  name        String    // Event name (e.g., "page_view", "signup", "purchase")
  properties  Json?     // Additional event properties
  userId      String?   // Optional user association
  user        User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
  timestamp   DateTime  @default(now())
  sessionId   String?   // To track user sessions
  path        String?   // Page path where event occurred
  
  @@index([name])
  @@index([timestamp])
  @@index([userId])
}

model DailyStats {
  id            String    @id @default(cuid())
  date          DateTime  @unique
  totalVisits   Int      @default(0)
  uniqueVisitors Int     @default(0)
  totalEvents   Int      @default(0)
  
  @@index([date])
}

model Customer {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  status    String
  plan      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
} 